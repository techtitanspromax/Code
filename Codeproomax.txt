#include "thingProperties.h"
#include <Wire.h>
#include <LCD_I2C.h>

#define relayPin 2
#define wet 210
#define dry 510
#define RELAY_ON_TIME 10 * 1000UL  // 10second in 

int analogInPinA0 = A0;  // Soil moisture sensor pin
int analogInPin = A2;    // Battery voltage analog pin
int sensorValue;
float calibration = 0.36;

LCD_I2C lcd(0x27, 20, 4);

unsigned long lastUpdate = 0;
const unsigned long updateInterval = 1000; // 1s
unsigned long relayStartTime = 0;
bool relayAutoOffActive = false;

void setup() {
  Serial.begin(9600);
  delay(1500);

  pinMode(relayPin, OUTPUT);
  digitalWrite(relayPin, HIGH); // Relay off

  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  Wire.begin();
  lcd.begin();
  lcd.backlight();
  lcd.clear();
}

void loop() {
  ArduinoCloud.update();

  unsigned long currentMillis = millis();
  
  // Update sensor readings and LCD
  if (currentMillis - lastUpdate >= updateInterval) {
    lastUpdate = currentMillis;
    readSoilMoisture();
    readBatteryVoltage();
    updateLCD();
  }

  // Auto turn-off relay after the duration
  if (relayAutoOffActive && (currentMillis - relayStartTime >= RELAY_ON_TIME)) {
    digitalWrite(relayPin, HIGH); // Turn off
    relay = false;
    relayAutoOffActive = false;
  }
}

void readBatteryVoltage() {
  int batteryRaw = analogRead(analogInPin);
  voltage = ((batteryRaw * 5.0) / 1023.0) * 2 + calibration;
  bat_percentage = mapfloat(voltage, 2.8, 7.4, 0, 100);

  if (bat_percentage >= 100) bat_percentage = 100;
  if (bat_percentage <= 0) bat_percentage = 1;

  Serial.print("Battery Raw = ");
  Serial.print(batteryRaw);
  Serial.print("\tVoltage = ");
  Serial.print(voltage);
  Serial.print(" V\tBattery % = ");
  Serial.println(bat_percentage);
}

float mapfloat(float x, float in_min, float in_max, float out_min, float out_max) {
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}

void readSoilMoisture() {
  int rawValue = analogRead(analogInPinA0);
  int mappedMoisture = map(rawValue, dry, wet, 0, 100);
  sensor = constrain(mappedMoisture, 0, 100);
}

void onRelayChange() {
  if (relay) {
    digitalWrite(relayPin, LOW); // ON
    relayStartTime = millis();
    relayAutoOffActive = true;
  } else {
    digitalWrite(relayPin, HIGH); // OFF
    relayAutoOffActive = false;
  }
}

void onTimeScheduleChange() {
  if (timeSchedule.isActive()) {
    digitalWrite(relayPin, LOW); // Turn ON
    relay = true;
    relayStartTime = millis();
    relayAutoOffActive = true;
  } else {
    digitalWrite(relayPin, HIGH); // Turn OFF
    relay = false;
    relayAutoOffActive = false;
  }
}

void updateLCD() {
  lcd.setCursor(0, 0);
  lcd.print("Moisture: ");
  lcd.print(sensor);
  lcd.print("%   ");

  lcd.setCursor(0, 1);
  if (sensor >= 70) {
    lcd.print("Soil: Wet     ");
  } else if (sensor >= 40) {
    lcd.print("Soil: Moist   ");
  } else {
    lcd.print("Soil: Dry     ");
  }

  lcd.setCursor(0, 3);
  lcd.print("Battery: ");
  lcd.print(bat_percentage);
  lcd.print("%   ");
}

void onSensorChange() {}
void onLcdChange() {}
